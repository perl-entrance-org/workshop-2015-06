# #!/usr/bin/env perl

use strict;
use warnings;

package PerlBeginners;
  sub perllevel{
    my $level = shift;
    unless($level =~ m/^[1-9]$|10/){
      return "no set level!!"
    }
    my % my_level = (
      1 => "Perl 関係の書籍や資料を何も読んでいない。Perl がプログラミング言語だということは知っているが、それ以外のことは何も知らない。他人の書いたPerl プログラムを実行できるので、プログラムの一部を編集することでプログラムの動作の一部（出力される文字列の内容など）を変更できることを知っている。プログラムのほかの部分に変更を加えてもなぜうまくいかないのか理解していない。この言語に合うメンタルモデルを持っていないので、Perl の構文をCOBOL とC++ のような他の言語のものとは区別できていない。",
      2 => "基本ブロック構造の構文を理解しているが、JavaScriptのような言語に似ているという程度の認識にとどまっている。ブロックがある種のスコープ効果を生じさせるという理解はあるものの、レキシカル変数のことは知らないし、use strict や usewarningsに出会ったこともない。条件の意味を変更することができ、基本的な算術演算子と論理演算子条件を使用できる。必要とするすべてのことを、他人の書いたプログラムに若干の変更を加えることで達成できると思っている。",
      3 => "プログラムをゼロから作成したいが、ある種の教育が必要だとわかっている。Perl を学ぶのに適した書籍を推薦して欲しいと思っている。このレベルのプログラマの中には、ラクダ本[WALL00] をチュートリアルだと思って手に入れ、その内容を読破しようとして、重いトラウマに苦しむ者がいるかもしれない。",
#
#               .
#               .
#               .
#               .
#               .
#               .
#               .
#
    10 => "Perl のobfuscation コンテストや「golf」コンテスト*3 に参加する。たとえば、普通のプログラマなら1 つのプログラムを丸ごと必要とするような関数を、埋め込みコードを使って単一の正規表現で実装してしまう。Perl コアにパッチを送ったり、新しいメジャーなモジュールを寄贈したりすることで、Perl コミュニティで有名人になるかもしれない"
    );
    return $my_level{$level};
  }
1;
